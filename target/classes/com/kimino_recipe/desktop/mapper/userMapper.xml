<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!-- namespce : (패키지>Mapper) 경로  -->
 <mapper namespace="com.kimino_recipe.desktop.mapper.userMapper">
 	
 	<!-- 유저 -->
 	<insert id="insert_User" parameterType="hashmap">
 		insert into kimino_recipe_user(user_num, user_id, user_pass, user_name, user_email)
 		values(kimino_recipe_user_seq.nextval, #{userVO.user_id}, #{userVO.user_pass}, #{userVO.user_name}, #{userVO.user_email})
 	</insert>
 	
 	<select id="get_User" resultType="com.kimino_recipe.desktop.domain.userVO">
 		select * from kimino_recipe_user 
 		where user_id = #{user_id}
 	</select>
 	
 	<update id="update_User" parameterType="hashmap">
 		update kimino_recipe_user 
 		set user_pass = #{userVO.user_pass}, user_name = #{userVO.name}, user_email = #{userVO.user_email} 
 		where user_num = #{user_num} 
 	</update>
 	
 	<select id="get_UserPass" resultType="String">
 		select user_pass from kimino_recipe_user 
 		where user_num = #{user_num}
 	</select>
 	
 	<delete id="delete_User">
 		delete from kimino_recipe_user 
 		where user_num = #{user_num}
 	</delete>
 	
 	<select id="idCheck" resultType="int">
 		select count(*) from kimino_recipe_user 
 		where user_id = #{id}
 	</select>
 	
 	<select id="emailCheck" resultType="int">
 		select count(*) from kimino_recipe_user
 		where user_email = #{user_email}
 	</select>
 	
 	<select id="nameCheck" resultType="int">
 		select count(*) from kimino_recipe_user 
 		where user_name = #{name}
 	</select>
 	
 	<update id="emailUpdate">
 		update kimino_recipe_user set user_email = #{user_email}
 		where user_num = #{user_num}
 	</update>
 	
 	<update id="nameUpdate" parameterType="hashmap">
 		update kimino_recipe_user set user_name = #{user_name} 
 		where user_num = #{user_num} 
 	</update>
 	
 	<update id="passUpdate" parameterType="hashmap">
 	 	update kimino_recipe_user set user_pass = #{user_pass} 
 		where user_num = #{user_num} 
 	</update>
 	
 	<!-- 관리자 -->
 	<select id="get_Admin" resultType="com.kimino_recipe.desktop.domain.adminVO">
 		select * from kimino_recipe_admin 
 		where admin_id = #{user_id}
 	</select>
 	
 	<select id="select_AllUser" parameterType="hashmap" resultType="com.kimino_recipe.desktop.domain.userVO">
 		select * from 
 		(select T.*, row_number() over(order by user_id asc) as rnum from kimino_recipe_user T)
 		where rnum between #{startNum} and #{endNum}
 	</select>
 	
 	<select id="get_userCount" resultType="int">
 		select count(*) from kimino_recipe_user
 	</select>
 	
 	 <update id="emailUpdate_Admin">
 		update kimino_recipe_admin set admin_email = #{admin_email}
 		where admin_num = #{admin_num}
 	</update>
 	
 	<update id="nameUpdate_Admin" parameterType="hashmap">
 		update kimino_recipe_admin set admin_name = #{admin_name} 
 		where admin_num = #{admin_num} 
 	</update>
 	
 	<update id="passUpdate_Admin" parameterType="hashmap">
 	 	update kimino_recipe_admin set admin_pass = #{admin_pass} 
 		where admin_num = #{admin_num} 
 	</update>
 	
 	 <select id="emailCheck_Admin" resultType="int">
 		select count(*) from kimino_recipe_admin
 		where admin_email = #{admin_email}
 	</select>
 	
 	<update id="update_Name" parameterType="hashmap">
 		update kimino_recipe_user set name = #{name} 
 		where user_num = #{user_num} 
 	</update>
 	
 	 <update id="update_Address" parameterType="hashmap">
 		update kimino_recipe_user set address1 = #{address_A}, address2 = #{address_B} 
 		where user_num = #{user_num} 
 	</update>
 	
 	 <update id="update_Phone_num" parameterType="hashmap">
 		update kimino_recipe_user set phone_num = #{phone_num} 
 		where user_num = #{user_num} 
 	</update>
 	
 	<!-- 사용자) 주문내역 > 주문상품 > 갱신  -->
 	<update id="update_OrderName" parameterType="hashmap">
 		update kimino_recipe_orderList set name = #{name} 
 		where order_id = #{order_id} 
 	</update>
 </mapper>